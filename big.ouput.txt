#source	"big.input.txt"
'	* ast.types.Struct pair (offset 0)
'	* ast.types.Array acme (offset 3)
'	* ast.types.Array fibonacci (offset 11)
'	* Invocation to the main function
call main
halt

#line	14
 p:
'	* Parameters
'	* Local variables
	enter	0
	ret	0,0,0

#line	16
 f:
'	* Parameters
'	* ast.types.DoubleType r (offset 6)
'	* ast.types.IntType e (offset 4)
'	* Local variables
'	* ast.types.DoubleType real (offset -4)
'	* ast.types.CharType c (offset -5)
'	* ast.types.IntType result (offset -7)
	enter	7

#line	20
'	* Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	6
	addi
	loadf
	pushf	10.0
	mulf
	storef

#line	21
'	* Assignment
	push	bp
	pushi	-5
	addi
	pushb	48
	storeb

#line	22
'	* If
	push	bp
	pushi	4
	addi
	loadi
	pushi	256
	lti
	jz	else1

#line	23
'	* Assignment
	push	bp
	pushi	-5
	addi
	push	bp
	pushi	4
	addi
	loadi
	i2b
	storeb

#line	24
'	* Assignment
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-5
	addi
	loadb
	b2i
	storei
	jmp	end2
 else1:

#line	27
'	* Assignment
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-4
	addi
	loadf
	f2i
	storei
 end2:

#line	28
'	* Return
	push	bp
	pushi	-7
	addi
	loadi
	ret	2,7,6

#line	31
 initialize:
'	* Parameters
'	* Local variables
'	* ast.types.IntType i (offset -2)
	enter	2

#line	33
'	* Assignment
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pushi	0
	storei

#line	34
'	* Assignment
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	1
	storei

#line	35
'	* Assignment
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pushi	1
	storei

#line	36
'	* Assignment
	push	bp
	pushi	-2
	addi
	pushi	1
	storei

#line	37
'	* While
 condition3:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz	endTag4

#line	38
'	* Assignment
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	storei

#line	39
'	* Assignment
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	storei

#line	40
'	* Assignment
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	addi
	storei

#line	41
'	* Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	condition3
 endTag4:
	ret	0,2,0

#line	47
 main:
'	* Parameters
'	* Local variables
'	* ast.types.IntType i (offset -2)
'	* ast.types.IntType j (offset -4)
	enter	4

#line	49
'	* Function Invocation
	call	p

#line	50
'	* Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	51
'	* Assignment
	pusha	0
	pushi	2
	addi
	pushb	48
	storeb

#line	52
'	* Assignment
	pusha	0
	pushi	0
	addi
	pushb	48
	b2i
	storei

#line	55
'	* Print
	push	bp
	pushi	-2
	addi
	loadi
	i2f
	pusha	0
	pushi	2
	addi
	loadb
	b2i
	call	f
	outi

#line	55
'	* Print
	pushb	10
	outb

#line	56
'	* Function Invocation
	pushf	1.3
	pushi	2
	call	f
	popi

#line	58
'	* Function Invocation
	call	initialize

#line	59
'	* Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	60
'	* While
 condition5:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz	endTag6

#line	62
'	* Print
	pushb	40
	outb

#line	62
'	* Print
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	outi

#line	62
'	* Print
	pushb	41
	outb

#line	62
'	* Print
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	outi

#line	62
'	* Print
	pushb	43
	outb

#line	62
'	* Print
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	outi

#line	62
'	* Print
	pushb	61
	outb

#line	62
'	* Print
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	outi

#line	62
'	* Print
	pushb	10
	outb

#line	65
'	* Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	condition5
 endTag6:

#line	68
'	* Assignment
	pusha	3
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	pushi	56
	storei

#line	70
'	* Print
	pusha	3
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi

#line	70
'	* Print
	pushb	10
	outb

#line	71
'	* Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	72
'	* While
 condition7:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	2
	lti
	jz	endTag8

#line	73
'	* Assignment
	push	bp
	pushi	-4
	addi
	pushi	0
	storei

#line	74
'	* While
 condition9:
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	lti
	jz	endTag10

#line	75
'	* Assignment
	pusha	3
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-2
	addi
	loadi
	push	bp
	pushi	-4
	addi
	loadi
	addi
	storei

#line	76
'	* Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	condition9
 endTag10:

#line	78
'	* Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	condition7
 endTag8:

#line	81
'	* Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	82
'	* While
 condition11:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	2
	lti
	jz	endTag12

#line	83
'	* Assignment
	push	bp
	pushi	-4
	addi
	pushi	0
	storei

#line	84
'	* While
 condition13:
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	lti
	jz	endTag14

#line	86
'	* Print
	pusha	3
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi

#line	86
'	* Print
	pushb	32
	outb

#line	87
'	* Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	condition13
 endTag14:

#line	89
'	* Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	condition11
 endTag12:
	ret	0,4,0
